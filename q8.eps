%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Linux 3.16.4-1-ARCH #1 SMP PREEMPT Mon Oct 6 08:22:27 CEST 2014 x86_64.
%%Title: /home/ross/Dropbox/Level4/Maths/Numerical Methods/ax1/q8.eps
%%CreationDate: 11/14/2014  20:05:31
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    24   143   568   698
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    24   143   568   698
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0288 8376 csm

    0     0  6539  6656 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6540 6657 rf
6 w
0 5425 5068 0 0 -5425 850 5924 4 MP
PP
-5068 0 0 5425 5068 0 0 -5425 850 5924 5 MP stroke
4 w
DO
SO
6 w
0 sg
 850 5924 mt 5918 5924 L
 850  499 mt 5918  499 L
 850 5924 mt  850  499 L
5918 5924 mt 5918  499 L
 850 5924 mt 5918 5924 L
 850 5924 mt  850  499 L
 850 5924 mt  850 5869 L
 850  499 mt  850  553 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 714 6069 mt 
(-12) s
1694 5924 mt 1694 5869 L
1694  499 mt 1694  553 L
1558 6069 mt 
(-11) s
2539 5924 mt 2539 5869 L
2539  499 mt 2539  553 L
2403 6069 mt 
(-10) s
3384 5924 mt 3384 5869 L
3384  499 mt 3384  553 L
3281 6069 mt 
(-9) s
4228 5924 mt 4228 5869 L
4228  499 mt 4228  553 L
4125 6069 mt 
(-8) s
5073 5924 mt 5073 5869 L
5073  499 mt 5073  553 L
4970 6069 mt 
(-7) s
5918 5924 mt 5918 5869 L
5918  499 mt 5918  553 L
5815 6069 mt 
(-6) s
 850 5924 mt  904 5924 L
5918 5924 mt 5863 5924 L
 612 5968 mt 
(-14) s
 850 5245 mt  904 5245 L
5918 5245 mt 5863 5245 L
 612 5289 mt 
(-13) s
 850 4567 mt  904 4567 L
5918 4567 mt 5863 4567 L
 612 4611 mt 
(-12) s
 850 3889 mt  904 3889 L
5918 3889 mt 5863 3889 L
 612 3933 mt 
(-11) s
 850 3211 mt  904 3211 L
5918 3211 mt 5863 3211 L
 612 3255 mt 
(-10) s
 850 2533 mt  904 2533 L
5918 2533 mt 5863 2533 L
 679 2577 mt 
(-9) s
 850 1855 mt  904 1855 L
5918 1855 mt 5863 1855 L
 679 1899 mt 
(-8) s
 850 1177 mt  904 1177 L
5918 1177 mt 5863 1177 L
 679 1221 mt 
(-7) s
 850  499 mt  904  499 L
5918  499 mt 5863  499 L
 679  543 mt 
(-6) s
 850 5924 mt 5918 5924 L
 850  499 mt 5918  499 L
 850 5924 mt  850  499 L
5918 5924 mt 5918  499 L
gs 850 499 5069 5426 rc
gr

/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
5882 1012 mt 5954 1012 L
5918  976 mt 5918 1048 L
5318 1020 mt 5390 1020 L
5354  984 mt 5354 1056 L
4755 2466 mt 4827 2466 L
4791 2430 mt 4791 2502 L
4192 3130 mt 4264 3130 L
4228 3094 mt 4228 3166 L
3629 3251 mt 3701 3251 L
3665 3215 mt 3665 3287 L
3066 3759 mt 3138 3759 L
3102 3723 mt 3102 3795 L
2503 3932 mt 2575 3932 L
2539 3896 mt 2539 3968 L
1940 4674 mt 2012 4674 L
1976 4638 mt 1976 4710 L
1377 5106 mt 1449 5106 L
1413 5070 mt 1413 5142 L
 814 5418 mt  886 5418 L
 850 5382 mt  850 5454 L
gs 850 499 5069 5426 rc
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
-563 452 -563 452 -563 452 -563 452 -563 452 -563 452 -563 452 -563 452 
-564 452 5918 499 10 MP stroke
gr

c9
0 sg
2868 6212 mt 
(log10 of given error) s
 530 3746 mt  -90 rotate
(log10 of actual error) s
90 rotate
1467  404 mt 
(Given error versus actual error of I using the Adaptive Sim\
psons method) s
 833 5967 mt 
( ) s
5902  541 mt 
( ) s
1 sg
0 188 876 0 0 -188 4983 747 4 MP
PP
-876 0 0 188 876 0 0 -188 4983 747 5 MP stroke
4 w
DO
SO
6 w
0 sg
4983  747 mt 5859  747 L
4983  559 mt 5859  559 L
4983  747 mt 4983  559 L
5859  747 mt 5859  559 L
4983  747 mt 5859  747 L
4983  747 mt 4983  559 L
4983  747 mt 5859  747 L
4983  559 mt 5859  559 L
4983  747 mt 4983  559 L
5859  747 mt 5859  559 L
5400  696 mt 
(f\(x\) = x) s
gs 4983 559 877 189 rc
c9
320 0 5047 653 2 MP stroke
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
